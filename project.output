Grammar

    0 $accept: S $end

    1 S: ε
    2  | I ';' S
    3  | statement S
    4  | TOK_ERROR

    5 I: I declarare
    6  | I atribuire
    7  | I print
    8  | I decl
    9  | I expression
   10  | print
   11  | atribuire
   12  | declarare
   13  | expression
   14  | decl

   15 decl: TOK_INT TOK_ID
   16     | TOK_FLOAT TOK_ID
   17     | TOK_DOUBLE TOK_ID

   18 declarare: TOK_INT TOK_ID '=' INT_VAL
   19          | TOK_FLOAT TOK_ID '=' FLOAT_VAL
   20          | TOK_DOUBLE TOK_ID '=' DOUBLE_VAL

   21 atribuire: TOK_ID '=' rightSide

   22 rightSide: TOK_ID '=' rightSide
   23          | expression

   24 expression: expression '+' termen
   25           | expression '-' termen
   26           | termen

   27 termen: termen '*' operand
   28       | termen '/' operand
   29       | operand

   30 operand: TOK_ID
   31        | INT_VAL
   32        | FLOAT_VAL
   33        | DOUBLE_VAL

   34 statement: if_statement
   35          | while_statement
   36          | block

   37 if_statement: TOK_IF '(' condition ')' block else_if optional_else
   38             | TOK_IF '(' condition ')' block optional_else

   39 else_if: else_if TOK_ELSE TOK_IF '(' condition ')' block
   40        | TOK_ELSE TOK_IF '(' condition ')' block

   41 optional_else: TOK_ELSE block
   42              | ε

   43 while_statement: TOK_WHILE '(' condition ')' block

   44 condition: operand rel_op operand

   45 block: '{' inside '}'

   46 inside: inside atribuire ';'
   47       | inside declarare ';'
   48       | atribuire ';'
   49       | declarare ';'

   50 rel_op: TOK_GT
   51       | TOK_LT
   52       | TOK_EQ
   53       | TOK_GE
   54       | TOK_LE

   55 print: TOK_PRINT '(' str ')'

   56 str: TOK_GHILIMEA tip_data TOK_GHILIMEA ',' operand

   57 tip_data: float2
   58         | int2
   59         | double2


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 37 38 39 40 43 55
    ')' (41) 37 38 39 40 43 55
    '*' (42) 27
    '+' (43) 24
    ',' (44) 56
    '-' (45) 25
    '/' (47) 28
    ';' (59) 2 46 47 48 49
    '=' (61) 18 19 20 21 22
    '{' (123) 45
    '}' (125) 45
    error (256)
    TOK_PRINT (258) 55
    TOK_ERROR (259) 4
    TOK_GHILIMEA (260) 56
    TOK_IF (261) 37 38 39 40
    TOK_ELSE (262) 39 40 41
    TOK_WHILE (263) 43
    TOK_GT (264) 50
    TOK_LT (265) 51
    TOK_EQ (266) 52
    TOK_GE (267) 53
    TOK_LE (268) 54
    TOK_INT (269) 15 18
    TOK_DOUBLE (270) 17 20
    TOK_FLOAT (271) 16 19
    int2 (272) 58
    double2 (273) 59
    float2 (274) 57
    TOK_ID <sir> (275) 15 16 17 18 19 20 21 22 30
    INT_VAL <ival> (276) 18 31
    FLOAT_VAL <fval> (277) 19 32
    DOUBLE_VAL <dval> (278) 20 33


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    S (36)
        on left: 1 2 3 4
        on right: 0 2 3
    I (37)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 2 5 6 7 8 9
    decl (38)
        on left: 15 16 17
        on right: 8 14
    declarare (39)
        on left: 18 19 20
        on right: 5 12 47 49
    atribuire (40)
        on left: 21
        on right: 6 11 46 48
    rightSide <info> (41)
        on left: 22 23
        on right: 21 22
    expression <info> (42)
        on left: 24 25 26
        on right: 9 13 23 24 25
    termen <info> (43)
        on left: 27 28 29
        on right: 24 25 26 27 28
    operand <info> (44)
        on left: 30 31 32 33
        on right: 27 28 29 44 56
    statement (45)
        on left: 34 35 36
        on right: 3
    if_statement (46)
        on left: 37 38
        on right: 34
    else_if (47)
        on left: 39 40
        on right: 37 39
    optional_else (48)
        on left: 41 42
        on right: 37 38
    while_statement (49)
        on left: 43
        on right: 35
    condition (50)
        on left: 44
        on right: 37 38 39 40 43
    block (51)
        on left: 45
        on right: 36 37 38 39 40 41 43
    inside (52)
        on left: 46 47 48 49
        on right: 45 46 47
    rel_op (53)
        on left: 50 51 52 53 54
        on right: 44
    print (54)
        on left: 55
        on right: 7 10
    str (55)
        on left: 56
        on right: 55
    tip_data (56)
        on left: 57 58 59
        on right: 56


State 0

    0 $accept: • S $end

    TOK_PRINT   shift, and go to state 1
    TOK_ERROR   shift, and go to state 2
    TOK_IF      shift, and go to state 3
    TOK_WHILE   shift, and go to state 4
    TOK_INT     shift, and go to state 5
    TOK_DOUBLE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_ID      shift, and go to state 8
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11
    '{'         shift, and go to state 12

    $default  reduce using rule 1 (S)

    S                go to state 13
    I                go to state 14
    decl             go to state 15
    declarare        go to state 16
    atribuire        go to state 17
    expression       go to state 18
    termen           go to state 19
    operand          go to state 20
    statement        go to state 21
    if_statement     go to state 22
    while_statement  go to state 23
    block            go to state 24
    print            go to state 25


State 1

   55 print: TOK_PRINT • '(' str ')'

    '('  shift, and go to state 26


State 2

    4 S: TOK_ERROR •

    $default  reduce using rule 4 (S)


State 3

   37 if_statement: TOK_IF • '(' condition ')' block else_if optional_else
   38             | TOK_IF • '(' condition ')' block optional_else

    '('  shift, and go to state 27


State 4

   43 while_statement: TOK_WHILE • '(' condition ')' block

    '('  shift, and go to state 28


State 5

   15 decl: TOK_INT • TOK_ID
   18 declarare: TOK_INT • TOK_ID '=' INT_VAL

    TOK_ID  shift, and go to state 29


State 6

   17 decl: TOK_DOUBLE • TOK_ID
   20 declarare: TOK_DOUBLE • TOK_ID '=' DOUBLE_VAL

    TOK_ID  shift, and go to state 30


State 7

   16 decl: TOK_FLOAT • TOK_ID
   19 declarare: TOK_FLOAT • TOK_ID '=' FLOAT_VAL

    TOK_ID  shift, and go to state 31


State 8

   21 atribuire: TOK_ID • '=' rightSide
   30 operand: TOK_ID •

    '='  shift, and go to state 32

    $default  reduce using rule 30 (operand)


State 9

   31 operand: INT_VAL •

    $default  reduce using rule 31 (operand)


State 10

   32 operand: FLOAT_VAL •

    $default  reduce using rule 32 (operand)


State 11

   33 operand: DOUBLE_VAL •

    $default  reduce using rule 33 (operand)


State 12

   45 block: '{' • inside '}'

    TOK_INT     shift, and go to state 33
    TOK_DOUBLE  shift, and go to state 34
    TOK_FLOAT   shift, and go to state 35
    TOK_ID      shift, and go to state 36

    declarare  go to state 37
    atribuire  go to state 38
    inside     go to state 39


State 13

    0 $accept: S • $end

    $end  shift, and go to state 40


State 14

    2 S: I • ';' S
    5 I: I • declarare
    6  | I • atribuire
    7  | I • print
    8  | I • decl
    9  | I • expression

    TOK_PRINT   shift, and go to state 1
    TOK_INT     shift, and go to state 5
    TOK_DOUBLE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_ID      shift, and go to state 8
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11
    ';'         shift, and go to state 41

    decl        go to state 42
    declarare   go to state 43
    atribuire   go to state 44
    expression  go to state 45
    termen      go to state 19
    operand     go to state 20
    print       go to state 46


State 15

   14 I: decl •

    $default  reduce using rule 14 (I)


State 16

   12 I: declarare •

    $default  reduce using rule 12 (I)


State 17

   11 I: atribuire •

    $default  reduce using rule 11 (I)


State 18

   13 I: expression •
   24 expression: expression • '+' termen
   25           | expression • '-' termen

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 13 (I)


State 19

   26 expression: termen •
   27 termen: termen • '*' operand
   28       | termen • '/' operand

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 26 (expression)


State 20

   29 termen: operand •

    $default  reduce using rule 29 (termen)


State 21

    3 S: statement • S

    TOK_PRINT   shift, and go to state 1
    TOK_ERROR   shift, and go to state 2
    TOK_IF      shift, and go to state 3
    TOK_WHILE   shift, and go to state 4
    TOK_INT     shift, and go to state 5
    TOK_DOUBLE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_ID      shift, and go to state 8
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11
    '{'         shift, and go to state 12

    $default  reduce using rule 1 (S)

    S                go to state 51
    I                go to state 14
    decl             go to state 15
    declarare        go to state 16
    atribuire        go to state 17
    expression       go to state 18
    termen           go to state 19
    operand          go to state 20
    statement        go to state 21
    if_statement     go to state 22
    while_statement  go to state 23
    block            go to state 24
    print            go to state 25


State 22

   34 statement: if_statement •

    $default  reduce using rule 34 (statement)


State 23

   35 statement: while_statement •

    $default  reduce using rule 35 (statement)


State 24

   36 statement: block •

    $default  reduce using rule 36 (statement)


State 25

   10 I: print •

    $default  reduce using rule 10 (I)


State 26

   55 print: TOK_PRINT '(' • str ')'

    TOK_GHILIMEA  shift, and go to state 52

    str  go to state 53


State 27

   37 if_statement: TOK_IF '(' • condition ')' block else_if optional_else
   38             | TOK_IF '(' • condition ')' block optional_else

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand    go to state 55
    condition  go to state 56


State 28

   43 while_statement: TOK_WHILE '(' • condition ')' block

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand    go to state 55
    condition  go to state 57


State 29

   15 decl: TOK_INT TOK_ID •
   18 declarare: TOK_INT TOK_ID • '=' INT_VAL

    '='  shift, and go to state 58

    $default  reduce using rule 15 (decl)


State 30

   17 decl: TOK_DOUBLE TOK_ID •
   20 declarare: TOK_DOUBLE TOK_ID • '=' DOUBLE_VAL

    '='  shift, and go to state 59

    $default  reduce using rule 17 (decl)


State 31

   16 decl: TOK_FLOAT TOK_ID •
   19 declarare: TOK_FLOAT TOK_ID • '=' FLOAT_VAL

    '='  shift, and go to state 60

    $default  reduce using rule 16 (decl)


State 32

   21 atribuire: TOK_ID '=' • rightSide

    TOK_ID      shift, and go to state 61
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    rightSide   go to state 62
    expression  go to state 63
    termen      go to state 19
    operand     go to state 20


State 33

   18 declarare: TOK_INT • TOK_ID '=' INT_VAL

    TOK_ID  shift, and go to state 64


State 34

   20 declarare: TOK_DOUBLE • TOK_ID '=' DOUBLE_VAL

    TOK_ID  shift, and go to state 65


State 35

   19 declarare: TOK_FLOAT • TOK_ID '=' FLOAT_VAL

    TOK_ID  shift, and go to state 66


State 36

   21 atribuire: TOK_ID • '=' rightSide

    '='  shift, and go to state 32


State 37

   49 inside: declarare • ';'

    ';'  shift, and go to state 67


State 38

   48 inside: atribuire • ';'

    ';'  shift, and go to state 68


State 39

   45 block: '{' inside • '}'
   46 inside: inside • atribuire ';'
   47       | inside • declarare ';'

    TOK_INT     shift, and go to state 33
    TOK_DOUBLE  shift, and go to state 34
    TOK_FLOAT   shift, and go to state 35
    TOK_ID      shift, and go to state 36
    '}'         shift, and go to state 69

    declarare  go to state 70
    atribuire  go to state 71


State 40

    0 $accept: S $end •

    $default  accept


State 41

    2 S: I ';' • S

    TOK_PRINT   shift, and go to state 1
    TOK_ERROR   shift, and go to state 2
    TOK_IF      shift, and go to state 3
    TOK_WHILE   shift, and go to state 4
    TOK_INT     shift, and go to state 5
    TOK_DOUBLE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_ID      shift, and go to state 8
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11
    '{'         shift, and go to state 12

    $default  reduce using rule 1 (S)

    S                go to state 72
    I                go to state 14
    decl             go to state 15
    declarare        go to state 16
    atribuire        go to state 17
    expression       go to state 18
    termen           go to state 19
    operand          go to state 20
    statement        go to state 21
    if_statement     go to state 22
    while_statement  go to state 23
    block            go to state 24
    print            go to state 25


State 42

    8 I: I decl •

    $default  reduce using rule 8 (I)


State 43

    5 I: I declarare •

    $default  reduce using rule 5 (I)


State 44

    6 I: I atribuire •

    $default  reduce using rule 6 (I)


State 45

    9 I: I expression •
   24 expression: expression • '+' termen
   25           | expression • '-' termen

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 9 (I)


State 46

    7 I: I print •

    $default  reduce using rule 7 (I)


State 47

   24 expression: expression '+' • termen

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    termen   go to state 73
    operand  go to state 20


State 48

   25 expression: expression '-' • termen

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    termen   go to state 74
    operand  go to state 20


State 49

   27 termen: termen '*' • operand

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand  go to state 75


State 50

   28 termen: termen '/' • operand

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand  go to state 76


State 51

    3 S: statement S •

    $default  reduce using rule 3 (S)


State 52

   56 str: TOK_GHILIMEA • tip_data TOK_GHILIMEA ',' operand

    int2     shift, and go to state 77
    double2  shift, and go to state 78
    float2   shift, and go to state 79

    tip_data  go to state 80


State 53

   55 print: TOK_PRINT '(' str • ')'

    ')'  shift, and go to state 81


State 54

   30 operand: TOK_ID •

    $default  reduce using rule 30 (operand)


State 55

   44 condition: operand • rel_op operand

    TOK_GT  shift, and go to state 82
    TOK_LT  shift, and go to state 83
    TOK_EQ  shift, and go to state 84
    TOK_GE  shift, and go to state 85
    TOK_LE  shift, and go to state 86

    rel_op  go to state 87


State 56

   37 if_statement: TOK_IF '(' condition • ')' block else_if optional_else
   38             | TOK_IF '(' condition • ')' block optional_else

    ')'  shift, and go to state 88


State 57

   43 while_statement: TOK_WHILE '(' condition • ')' block

    ')'  shift, and go to state 89


State 58

   18 declarare: TOK_INT TOK_ID '=' • INT_VAL

    INT_VAL  shift, and go to state 90


State 59

   20 declarare: TOK_DOUBLE TOK_ID '=' • DOUBLE_VAL

    DOUBLE_VAL  shift, and go to state 91


State 60

   19 declarare: TOK_FLOAT TOK_ID '=' • FLOAT_VAL

    FLOAT_VAL  shift, and go to state 92


State 61

   22 rightSide: TOK_ID • '=' rightSide
   30 operand: TOK_ID •

    '='  shift, and go to state 93

    $default  reduce using rule 30 (operand)


State 62

   21 atribuire: TOK_ID '=' rightSide •

    $default  reduce using rule 21 (atribuire)


State 63

   23 rightSide: expression •
   24 expression: expression • '+' termen
   25           | expression • '-' termen

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 23 (rightSide)


State 64

   18 declarare: TOK_INT TOK_ID • '=' INT_VAL

    '='  shift, and go to state 58


State 65

   20 declarare: TOK_DOUBLE TOK_ID • '=' DOUBLE_VAL

    '='  shift, and go to state 59


State 66

   19 declarare: TOK_FLOAT TOK_ID • '=' FLOAT_VAL

    '='  shift, and go to state 60


State 67

   49 inside: declarare ';' •

    $default  reduce using rule 49 (inside)


State 68

   48 inside: atribuire ';' •

    $default  reduce using rule 48 (inside)


State 69

   45 block: '{' inside '}' •

    $default  reduce using rule 45 (block)


State 70

   47 inside: inside declarare • ';'

    ';'  shift, and go to state 94


State 71

   46 inside: inside atribuire • ';'

    ';'  shift, and go to state 95


State 72

    2 S: I ';' S •

    $default  reduce using rule 2 (S)


State 73

   24 expression: expression '+' termen •
   27 termen: termen • '*' operand
   28       | termen • '/' operand

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 24 (expression)


State 74

   25 expression: expression '-' termen •
   27 termen: termen • '*' operand
   28       | termen • '/' operand

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 25 (expression)


State 75

   27 termen: termen '*' operand •

    $default  reduce using rule 27 (termen)


State 76

   28 termen: termen '/' operand •

    $default  reduce using rule 28 (termen)


State 77

   58 tip_data: int2 •

    $default  reduce using rule 58 (tip_data)


State 78

   59 tip_data: double2 •

    $default  reduce using rule 59 (tip_data)


State 79

   57 tip_data: float2 •

    $default  reduce using rule 57 (tip_data)


State 80

   56 str: TOK_GHILIMEA tip_data • TOK_GHILIMEA ',' operand

    TOK_GHILIMEA  shift, and go to state 96


State 81

   55 print: TOK_PRINT '(' str ')' •

    $default  reduce using rule 55 (print)


State 82

   50 rel_op: TOK_GT •

    $default  reduce using rule 50 (rel_op)


State 83

   51 rel_op: TOK_LT •

    $default  reduce using rule 51 (rel_op)


State 84

   52 rel_op: TOK_EQ •

    $default  reduce using rule 52 (rel_op)


State 85

   53 rel_op: TOK_GE •

    $default  reduce using rule 53 (rel_op)


State 86

   54 rel_op: TOK_LE •

    $default  reduce using rule 54 (rel_op)


State 87

   44 condition: operand rel_op • operand

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand  go to state 97


State 88

   37 if_statement: TOK_IF '(' condition ')' • block else_if optional_else
   38             | TOK_IF '(' condition ')' • block optional_else

    '{'  shift, and go to state 12

    block  go to state 98


State 89

   43 while_statement: TOK_WHILE '(' condition ')' • block

    '{'  shift, and go to state 12

    block  go to state 99


State 90

   18 declarare: TOK_INT TOK_ID '=' INT_VAL •

    $default  reduce using rule 18 (declarare)


State 91

   20 declarare: TOK_DOUBLE TOK_ID '=' DOUBLE_VAL •

    $default  reduce using rule 20 (declarare)


State 92

   19 declarare: TOK_FLOAT TOK_ID '=' FLOAT_VAL •

    $default  reduce using rule 19 (declarare)


State 93

   22 rightSide: TOK_ID '=' • rightSide

    TOK_ID      shift, and go to state 61
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    rightSide   go to state 100
    expression  go to state 63
    termen      go to state 19
    operand     go to state 20


State 94

   47 inside: inside declarare ';' •

    $default  reduce using rule 47 (inside)


State 95

   46 inside: inside atribuire ';' •

    $default  reduce using rule 46 (inside)


State 96

   56 str: TOK_GHILIMEA tip_data TOK_GHILIMEA • ',' operand

    ','  shift, and go to state 101


State 97

   44 condition: operand rel_op operand •

    $default  reduce using rule 44 (condition)


State 98

   37 if_statement: TOK_IF '(' condition ')' block • else_if optional_else
   38             | TOK_IF '(' condition ')' block • optional_else

    TOK_ELSE  shift, and go to state 102

    $default  reduce using rule 42 (optional_else)

    else_if        go to state 103
    optional_else  go to state 104


State 99

   43 while_statement: TOK_WHILE '(' condition ')' block •

    $default  reduce using rule 43 (while_statement)


State 100

   22 rightSide: TOK_ID '=' rightSide •

    $default  reduce using rule 22 (rightSide)


State 101

   56 str: TOK_GHILIMEA tip_data TOK_GHILIMEA ',' • operand

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand  go to state 105


State 102

   40 else_if: TOK_ELSE • TOK_IF '(' condition ')' block
   41 optional_else: TOK_ELSE • block

    TOK_IF  shift, and go to state 106
    '{'     shift, and go to state 12

    block  go to state 107


State 103

   37 if_statement: TOK_IF '(' condition ')' block else_if • optional_else
   39 else_if: else_if • TOK_ELSE TOK_IF '(' condition ')' block

    TOK_ELSE  shift, and go to state 108

    $default  reduce using rule 42 (optional_else)

    optional_else  go to state 109


State 104

   38 if_statement: TOK_IF '(' condition ')' block optional_else •

    $default  reduce using rule 38 (if_statement)


State 105

   56 str: TOK_GHILIMEA tip_data TOK_GHILIMEA ',' operand •

    $default  reduce using rule 56 (str)


State 106

   40 else_if: TOK_ELSE TOK_IF • '(' condition ')' block

    '('  shift, and go to state 110


State 107

   41 optional_else: TOK_ELSE block •

    $default  reduce using rule 41 (optional_else)


State 108

   39 else_if: else_if TOK_ELSE • TOK_IF '(' condition ')' block
   41 optional_else: TOK_ELSE • block

    TOK_IF  shift, and go to state 111
    '{'     shift, and go to state 12

    block  go to state 107


State 109

   37 if_statement: TOK_IF '(' condition ')' block else_if optional_else •

    $default  reduce using rule 37 (if_statement)


State 110

   40 else_if: TOK_ELSE TOK_IF '(' • condition ')' block

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand    go to state 55
    condition  go to state 112


State 111

   39 else_if: else_if TOK_ELSE TOK_IF • '(' condition ')' block

    '('  shift, and go to state 113


State 112

   40 else_if: TOK_ELSE TOK_IF '(' condition • ')' block

    ')'  shift, and go to state 114


State 113

   39 else_if: else_if TOK_ELSE TOK_IF '(' • condition ')' block

    TOK_ID      shift, and go to state 54
    INT_VAL     shift, and go to state 9
    FLOAT_VAL   shift, and go to state 10
    DOUBLE_VAL  shift, and go to state 11

    operand    go to state 55
    condition  go to state 115


State 114

   40 else_if: TOK_ELSE TOK_IF '(' condition ')' • block

    '{'  shift, and go to state 12

    block  go to state 116


State 115

   39 else_if: else_if TOK_ELSE TOK_IF '(' condition • ')' block

    ')'  shift, and go to state 117


State 116

   40 else_if: TOK_ELSE TOK_IF '(' condition ')' block •

    $default  reduce using rule 40 (else_if)


State 117

   39 else_if: else_if TOK_ELSE TOK_IF '(' condition ')' • block

    '{'  shift, and go to state 12

    block  go to state 118


State 118

   39 else_if: else_if TOK_ELSE TOK_IF '(' condition ')' block •

    $default  reduce using rule 39 (else_if)
